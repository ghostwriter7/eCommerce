{"version":3,"sources":["lib/commerce.js","components/ProductsList/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","components/Loading/Loading.jsx","components/Navbar/Navbar.jsx","components/Cart/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/Checkout/OrderSummary.jsx","components/Checkout/FormInput.jsx","components/Checkout/Checkout.jsx","components/Slider/Slide/Slide.jsx","components/Slider/Slider.jsx","components/Checkout/Confirmation.jsx","components/Checkout/Error.jsx","App.js","index.js"],"names":["commerce","Commerce","process","variants","ProductItem","product","idx","onAddToCart","Col","className","Card","bg","Img","height","style","objectFit","variant","src","image","url","Body","Title","name","Subtitle","description","replace","price","formatted_with_symbol","Button","onClick","id","size","ProductsList","products","Container","fluid","Row","xs","sm","lg","map","Loading","Spinner","animation","NavbarComponent","totalItems","location","useLocation","Navbar","expand","minHeight","to","Brand","Toggle","Collapse","Nav","pathname","Badge","CartItem","item","onUpdateCartQty","onRemoveFromCart","media","source","quantity","Cart","cart","onEmptyCart","line_items","length","Stack","subtotal","direction","gap","md","OrderSummary","Table","striped","hover","bordered","FormInput","value","type","placeholder","onChange","label","Form","Group","Label","htmlFor","Control","required","Checkout","onCaptureCheckout","useState","checkoutToken","setCheckoutToken","loading","setLoading","history","useHistory","firstName","setFirstName","lastName","setLastName","email","setEmail","shippingName","setShippingName","shippingStreet","setShippingStreet","shippingCity","setShippingCity","shippingZipCode","setShippingZipCode","cardNum","setCardNum","expMonth","setExpMonth","expYear","setExpYear","ccv","setCcv","billingZipCode","setBillingZipCode","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","sendingOrder","setSendingOrder","generateCheckoutToken","a","checkout","generateToken","token","console","log","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","countries","countriesArray","Object","entries","key","push","countryCode","country","fetchShippingSubdivisions","localeListSubdivisions","subdivisions","subdivisionArray","code","division","fetchShippingOptions","stateProvince","getShippingOptions","region","options","useEffect","Alert","Heading","e","target","Select","index","subdivision","option","preventDefault","lineItems","orderData","reduce","data","lineItem","variantData","selected_options","group_id","option_id","customer","firstname","lastname","shipping","street","town_city","county_state","postal_zip_code","fulfillment","shipping_method","payment","gateway","card","number","expiry_month","expiry_year","cvc","then","catch","error","handleCaptureCheckout","role","Slide","slide","raw","top","right","transform","alt","Slider","slides","Carousel","Item","interval","Confirmation","order","customer_reference","Error","message","App","setProducts","setTotalItems","setCart","merchant","isCartVisible","setOrder","setError","fetchProducts","list","fetchCart","retrieve","total_items","handleAddToCart","productId","add","handleUpdateCartQty","update","handleRemoveFromCart","remove","handleEmptyCart","empty","newOrder","capture","refreshCart","refresh","newCart","marginTop","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eddcebbe.chunk.js","sourcesContent":["import Commerce from \"@chec/commerce.js\";\n\nexport const commerce = new Commerce(\n  process.env.REACT_APP_CHEC_PUBLIC_KEY,\n  true\n);\n","import React from \"react\";\nimport { Col, Card, Button } from \"react-bootstrap\";\nimport { CartPlus } from \"react-bootstrap-icons\";\nconst variants = [\"light\", \"dark\"];\n\nconst ProductItem = ({ product, idx, onAddToCart }) => {\n  return (\n    <>\n      <Col className=\"p-3\">\n        <Card bg={idx % 2 ? variants[0] : variants[1]}>\n          <Card.Img\n            height=\"200px\"\n            style={{ objectFit: \"cover\" }}\n            variant=\"top\"\n            src={product.image.url}\n          />\n          <Card.Body className={idx % 2 ? \"text-dark\" : \"text-light\"}>\n            <Card.Title>{product.name}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {product.description.replace(/<\\/?p>/g, \"\")}\n            </Card.Subtitle>\n            <hr />\n            <div className=\"d-flex justify-content-between\">\n              <h1>{product.price.formatted_with_symbol}</h1>\n              <Button\n                onClick={() => onAddToCart(product.id, 1)}\n                variant={\n                  idx % 2 ? `outline-${variants[1]}` : `outline-${variants[0]}`\n                }\n              >\n                <CartPlus size={25} /> Add to Cart\n              </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport ProductItem from \"./ProductItem/ProductItem\";\n\nconst ProductsList = ({ products, onAddToCart }) => {\n  return (\n    <>\n      <Container fluid=\"md\">\n        <div className=\"flex-column align-items-end d-none d-md-flex\">\n          <p className=\"text-muted h5 mb-0\">Latest Collection</p>\n          <h1 className=\"display-5\">Highest quality</h1>\n        </div>\n        <Row xs={1} sm={2} lg={3}>\n          {products.map((product, idx) => (\n            <ProductItem\n              product={product}\n              idx={idx}\n              key={product.id}\n              onAddToCart={onAddToCart}\n            />\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default ProductsList;\n","import React from \"react\";\nimport { Container, Spinner } from \"react-bootstrap\";\n\nconst Loading = () => {\n  return (\n    <>\n      <Container\n        fluid\n        className=\"d-flex flex-column justify-content-center align-items-center vh-75\"\n      >\n        <h1 className=\"display-5 text-uppercase\">Loading...</h1>\n        <Spinner animation=\"border\" variant=\"danger\" />\n      </Container>\n    </>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Navbar,\n  Container,\n  Button,\n  Badge,\n  Nav,\n  Col,\n  Row,\n  Stack,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Asterisk, Cart } from \"react-bootstrap-icons\";\n\nconst NavbarComponent = ({ totalItems }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Navbar\n        bg=\"dark\"\n        className=\"fixed-top py-3 px-3\"\n        expand=\"md\"\n        style={{ minHeight: \"75px\" }}\n      >\n        <Container fluid=\"md\">\n          <Link to=\"/\">\n            <Navbar.Brand className=\"text-light\">\n              <Cart className=\"me-1 text-danger\" />\n              <span className=\"h5\">JackieStore</span>\n              <small className=\"text-uppercase text-danger\"> Hand-made</small>\n            </Navbar.Brand>\n          </Link>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            className=\"bg-light\"\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto d-flex align-items-center gap-4\">\n              <Link to=\"/shop\" className=\"text-light\">\n                Shop\n              </Link>\n              {location.pathname === \"/\" || location.pathname === \"/shop\" ? (\n                <Link to=\"/cart\">\n                  <Button variant=\"light\">\n                    <Cart size={25} className=\"me-3\" />\n                    <Badge bg=\"danger\">{totalItems}</Badge>\n                  </Button>\n                </Link>\n              ) : (\n                \"\"\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport { Card, Col, Button } from \"react-bootstrap\";\nimport { Dash, Plus, CartDash } from \"react-bootstrap-icons\";\n\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\n  return (\n    <Col key={item.id}>\n      <Card bg=\"dark\">\n        <Card.Img\n          src={item.media.source}\n          style={{ objectFit: \"cover\" }}\n          height=\"200px\"\n        />\n        <Card.Body>\n          <Card.Title className=\"text-light\">{item.name}</Card.Title>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"d-flex align-items-center\">\n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                onClick={() => onUpdateCartQty(item.id, item.quantity - 1)}\n              >\n                <Dash size=\"25\" />\n              </Button>\n\n              <span className=\"display-5 mx-3 text-light\">{item.quantity}</span>\n\n              <Button\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => onUpdateCartQty(item.id, item.quantity + 1)}\n              >\n                <Plus size=\"25\" />\n              </Button>\n            </div>\n            <Button\n              variant=\"danger\"\n              className=\"px-3\"\n              onClick={() => onRemoveFromCart(item.id)}\n            >\n              <CartDash size=\"25\" /> Remove\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Button, Stack, Col } from \"react-bootstrap\";\nimport { CartCheckFill, BagX, Basket2Fill } from \"react-bootstrap-icons\";\nimport CartItem from \"./CartItem/CartItem\";\n\nconst Cart = ({ cart, onUpdateCartQty, onRemoveFromCart, onEmptyCart }) => {\n  const items = cart.line_items.length;\n\n  const EmptyCart = () => {\n    return (\n      <>\n        <Container fluid=\"md\">\n          <Row>\n            <Col sm={8}>\n              <h1 className=\"display-3\">Your cart is empty</h1>\n              <p className=\"h5 text-muted\">\n                <Link to=\"/shop\" className=\"text-danger\">\n                  {\" \"}\n                  Go back to the shop{\" \"}\n                </Link>{\" \"}\n                and start shopping!{\" \"}\n              </p>\n            </Col>\n            <Col sm={4} className=\"d-flex justify-content-center mt-5\">\n              <Basket2Fill size={255} />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\n  const FullCart = () => {\n    return (\n      <>\n        <Container fluid=\"md\" className=\"mb-5\">\n          <Container fluid className=\"d-flex justify-content-between my-5\">\n            <Stack>\n              <h1 className=\"mb-0\">Your shopping cart: </h1>\n\n              <p className=\"display-5\">\n                <span className=\"text-muted\">Subtotal:</span>{\" \"}\n                {cart.subtotal.formatted_with_symbol}\n              </p>\n            </Stack>\n            <Stack direction=\"horizontal\" gap={3}>\n              <Button\n                size=\"lg\"\n                variant=\"outline-danger\"\n                onClick={() => onEmptyCart()}\n              >\n                <BagX size=\"25\" className=\"me-2\" />\n                Empty\n              </Button>\n              <Link to=\"/checkout\">\n                <Button size=\"lg\" variant=\"outline-dark\">\n                  <CartCheckFill size=\"25\" className=\"me-2\" />\n                  Checkout\n                </Button>\n              </Link>\n            </Stack>\n          </Container>\n          <Row md={2} lg={3} className=\"g-4\">\n            {cart.line_items.map((item) => (\n              <CartItem\n                key={item.id}\n                item={item}\n                onUpdateCartQty={onUpdateCartQty}\n                onRemoveFromCart={onRemoveFromCart}\n              />\n            ))}\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\n  return items === 0 ? EmptyCart() : FullCart();\n};\n\nexport default Cart;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst OrderSummary = ({ cart }) => {\n  return (\n    <>\n      <h1>Order summary</h1>\n      <Table striped hover bordered className=\"mb-5 mt-4\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Product</th>\n            <th>Quantity</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cart.line_items.map((item, idx) => (\n            <tr key={idx}>\n              <td>{idx + 1}</td>\n              <td>{item.name}</td>\n              <td>{item.quantity}</td>\n              <td>{item.price.formatted_with_symbol}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default OrderSummary;\n","import React from \"react\";\nimport { Col, Form } from \"react-bootstrap\";\n\nconst FormInput = ({ value, type, id, placeholder, onChange, label }) => {\n  return (\n    <Col>\n      <Form.Group className=\"mb-3\">\n        <Form.Label htmlFor={id}>{label}</Form.Label>\n        <Form.Control\n          name={id}\n          id={id}\n          type={type}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          required\n        />\n      </Form.Group>\n    </Col>\n  );\n};\n\nexport default FormInput;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Loading from \"../Loading/Loading\";\nimport OrderSummary from \"./OrderSummary\";\nimport {\n  Container,\n  Row,\n  Form,\n  Col,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { commerce } from \"../../lib/commerce\";\nimport FormInput from \"./FormInput\";\n\nconst Checkout = ({ cart, onCaptureCheckout }) => {\n  const [checkoutToken, setCheckoutToken] = useState({});\n  const [loading, setLoading] = useState(true);\n  let history = useHistory();\n\n  //INPUTS\n  const [firstName, setFirstName] = useState(\"Joe\");\n  const [lastName, setLastName] = useState(\"Danny\");\n  const [email, setEmail] = useState(\"joedanny@gmail.com\");\n  const [shippingName, setShippingName] = useState(\"Joe Danny\");\n  const [shippingStreet, setShippingStreet] = useState(\"123 Fake Str\");\n  const [shippingCity, setShippingCity] = useState(\"San Francisco\");\n  const [shippingZipCode, setShippingZipCode] = useState(\"93821\");\n  const [cardNum, setCardNum] = useState(\"4242 4242 4242 4242\");\n  const [expMonth, setExpMonth] = useState(\"11\");\n  const [expYear, setExpYear] = useState(\"2023\");\n  const [ccv, setCcv] = useState(\"123\");\n  const [billingZipCode, setBillingZipCode] = useState(\"93821\");\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n\n  const [sendingOrder, setSendingOrder] = useState(false);\n\n  const generateCheckoutToken = async () => {\n    if (cart.line_items.length) {\n      try {\n        const token = await commerce.checkout.generateToken(cart.id, {\n          type: \"cart\",\n        });\n        setCheckoutToken(token);\n        setLoading(false);\n      } catch (error) {\n        console.log(\"Error occured while generating checkout token\", error);\n      }\n    }\n  };\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    try {\n      const { countries } = await commerce.services.localeListShippingCountries(\n        checkoutTokenId\n      );\n      const countriesArray = [];\n      Object.entries(countries).map((key) =>\n        countriesArray.push({ countryCode: key[0], country: key[1] })\n      );\n      setShippingCountries(countriesArray);\n      setShippingCountry(countriesArray[0].countryCode);\n    } catch (error) {\n      console.log(\"Error occured while fetching shipping countries\", error);\n    }\n  };\n\n  const fetchShippingSubdivisions = async (countryCode) => {\n    try {\n      const { subdivisions } = await commerce.services.localeListSubdivisions(\n        countryCode\n      );\n      const subdivisionArray = [];\n      for (const [key, value] of Object.entries(subdivisions)) {\n        subdivisionArray.push({ code: key, division: value });\n      }\n      setShippingSubdivisions(subdivisionArray);\n      setShippingSubdivision(subdivisionArray[0].code);\n    } catch (error) {\n      console.log(\"Error occured while fetching subdivisions\", error);\n    }\n  };\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    stateProvince = null\n  ) => {\n    try {\n      const options = await commerce.checkout.getShippingOptions(\n        checkoutTokenId,\n        { country: country, region: stateProvince }\n      );\n      const shippingOption = options[0] || null;\n      setShippingOptions(options);\n      setShippingOption(shippingOption);\n    } catch (error) {\n      console.log(\"Error occured while fetching shipping options\", error);\n    }\n  };\n\n  useEffect(() => {\n    generateCheckoutToken();\n  }, []);\n\n  useEffect(() => {\n    if (!checkoutToken.id) return;\n    fetchShippingCountries(checkoutToken.id);\n  }, [checkoutToken]);\n\n  useEffect(() => {\n    if (!shippingCountry) return;\n    fetchShippingSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (!shippingCountry) return;\n    fetchShippingOptions(\n      checkoutToken.id,\n      shippingCountry,\n      shippingSubdivision\n    );\n  }, [shippingSubdivision]);\n\n  const sanitizedLineItems = (lineItems) => {\n    return lineItems.reduce((data, lineItem) => {\n      const item = data;\n      let variantData = null;\n      if (lineItem.selected_options?.length) {\n        variantData = {\n          [lineItem.selected_options[0].group_id]:\n            lineItem.selected_options[0].option_id,\n        };\n      }\n      item[lineItem.id] = {\n        quantity: lineItem.quantity,\n        variants: variantData,\n      };\n      return item;\n    }, {});\n  };\n\n  const handleCaptureCheckout = (e) => {\n    e.preventDefault();\n    setSendingOrder(true);\n    const orderData = {\n      line_items: sanitizedLineItems(cart.line_items),\n      customer: {\n        firstname: firstName,\n        lastname: lastName,\n        email: email,\n      },\n      shipping: {\n        name: shippingName,\n        street: shippingStreet,\n        town_city: shippingCity,\n        county_state: shippingSubdivision,\n        postal_zip_code: shippingZipCode,\n        country: shippingCountry,\n      },\n      fulfillment: {\n        shipping_method: shippingOption.id,\n      },\n      payment: {\n        gateway: \"test_gateway\",\n        card: {\n          number: cardNum,\n          expiry_month: expMonth,\n          expiry_year: expYear,\n          cvc: ccv,\n          postal_zip_code: billingZipCode,\n        },\n      },\n    };\n    onCaptureCheckout(checkoutToken.id, orderData)\n      .then(() => {\n        setSendingOrder(false);\n        history.push(\"/confirmation\");\n      })\n      .catch((error) => {\n        setSendingOrder(false);\n        history.push(\"/error\");\n      });\n  };\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <Container fluid=\"md\">\n      <OrderSummary cart={cart} />\n      <Alert className=\"mb-5\" variant=\"danger\">\n        <Alert.Heading>\n          Hi! This form is still under construction!\n        </Alert.Heading>\n        <p>\n          Type real e-mail if you want to receive a fake confirmation at your\n          e-mail. Otherwise, submit you order and let's hope that Joe will enjoy\n          the goods you've chosen.\n        </p>\n        <hr />\n        <p className=\"mb-0\">\n          If you want an error component to be rendered, mess up with it (for\n          instance, change country to US and remove last digit from ZIP Code)\n        </p>\n      </Alert>\n      <h1 className=\"mb-5\">Shipping & Payment</h1>\n      <Form>\n        <Row sm={1} md={2}>\n          <FormInput\n            value={firstName}\n            id=\"firstName\"\n            placeholder=\"Your first name\"\n            onChange={(e) => setFirstName(e.target.value)}\n            label=\"First name\"\n            type=\"text\"\n          />\n          <FormInput\n            value={lastName}\n            id=\"lastName\"\n            placeholder=\"Your last name\"\n            onChange={(e) => setLastName(e.target.value)}\n            label=\"Last name\"\n            type=\"text\"\n          />\n          <FormInput\n            value={email}\n            id=\"email\"\n            placeholder=\"Your email\"\n            onChange={(e) => setEmail(e.target.value)}\n            label=\"Email\"\n            type=\"email\"\n          />\n          <FormInput\n            value={shippingName}\n            id=\"shippingName\"\n            placeholder=\"Your shipping name\"\n            onChange={(e) => setShippingName(e.target.value)}\n            label=\"Shipping name\"\n            type=\"text\"\n          />\n          <FormInput\n            value={shippingStreet}\n            id=\"shippingStreet\"\n            placeholder=\"Your shipping street\"\n            onChange={(e) => setShippingStreet(e.target.value)}\n            label=\"Shipping street\"\n            type=\"text\"\n          />\n          <FormInput\n            value={shippingCity}\n            id=\"shippingCity\"\n            placeholder=\"Your shipping city\"\n            onChange={(e) => setShippingCity(e.target.value)}\n            label=\"Shipping city\"\n            type=\"text\"\n          />\n          <FormInput\n            value={shippingZipCode}\n            id=\"shippingZipCode\"\n            placeholder=\"Your shipping ZIP code\"\n            onChange={(e) => setShippingZipCode(e.target.value)}\n            label=\"Shipping ZIP code\"\n            type=\"text\"\n          />\n\n          <FormInput\n            value={billingZipCode}\n            id=\"billingZipCode\"\n            placeholder=\"Billing ZIP code\"\n            onChange={(e) => setBillingZipCode(e.target.value)}\n            label=\"Billing ZIP code\"\n            type=\"text\"\n          />\n          <Col>\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"countries\">Country</Form.Label>\n              <Form.Select\n                id=\"countries\"\n                aria-label=\"Selection of shipping countries\"\n                onChange={(e) => setShippingCountry(e.target.value)}\n                value={shippingCountry}\n              >\n                {shippingCountries.map((country, index) => (\n                  <option key={index} value={country.countryCode}>\n                    {country.country}\n                  </option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"subdivisions\">Subdivisions</Form.Label>\n              <Form.Select\n                id=\"subdivisions\"\n                aria-label=\"Selection of shipping subdivisions\"\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n                value={shippingSubdivision}\n              >\n                {shippingSubdivisions.map((subdivision, index) => (\n                  <option key={index} value={subdivision.code}>\n                    {subdivision.division}\n                  </option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"options\">Options</Form.Label>\n              <Form.Select\n                id=\"options\"\n                aria-label=\"Selection of shipping options\"\n                value={shippingOption.id}\n              >\n                {shippingOptions.map((option, idx) => (\n                  <option key={idx} value={option.id}>\n                    {`${option.description} - ${option.price.formatted_with_symbol}`}\n                  </option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col md={12}>\n            <hr />\n          </Col>\n          <FormInput\n            value={cardNum}\n            id=\"cardNum\"\n            placeholder=\"Your card number\"\n            onChange={(e) => setCardNum(e.target.value)}\n            label=\"Card Number\"\n            type=\"text\"\n          />\n          <FormInput\n            value={expMonth}\n            id=\"expMonth\"\n            placeholder=\"Expiration month\"\n            onChange={(e) => setExpMonth(e.target.value)}\n            label=\"Card's expiration month\"\n            type=\"number\"\n          />\n          <FormInput\n            value={expYear}\n            id=\"expYear\"\n            placeholder=\"Expiration year\"\n            onChange={(e) => setExpYear(e.target.value)}\n            label=\"Card's expiration year\"\n            type=\"number\"\n          />\n          <FormInput\n            value={ccv}\n            id=\"ccv\"\n            placeholder=\"CCV\"\n            onChange={(e) => setCcv(e.target.value)}\n            label=\"CCV\"\n            type=\"number\"\n          />\n          <Col className=\"d-flex justify-content-center align-items-center\">\n            <Button\n              className=\"w-100 mt-5\"\n              variant=\"danger\"\n              type=\"submit\"\n              size=\"lg\"\n              onClick={(e) => handleCaptureCheckout(e)}\n            >\n              {sendingOrder ? (\n                <>\n                  <Spinner animation=\"border\" role=\"status\" />{\" \"}\n                  <span>Loading...</span>\n                </>\n              ) : (\n                \"Confirm your order\"\n              )}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport { Row, Col, Badge } from \"react-bootstrap\";\nimport { Tags } from \"react-bootstrap-icons\";\n\nconst Slide = ({ slide }) => {\n  return (\n    <Row className=\"d-flex justify-content-center\">\n      <Col\n        md={5}\n        className=\"d-flex py-5 justify-content-center align-items-center gap-5 flex-column\"\n      >\n        <div>\n          <h1 className=\"display-5 text-dark\">\n            {slide.name}\n            <Badge bg=\"danger\" className=\"ms-3\">\n              New\n            </Badge>\n          </h1>\n          <p className=\"text-muted h4 mt-3\">\n            {slide.description.replace(/<\\/?p>/g, \"\")}\n          </p>\n        </div>\n\n        <div className=\"d-flex  align-items-center gap-3\">\n          <h3>\n            <Badge className=\"bg-secondary font-weight-bold\">\n              <s>{`$${slide.price.raw * 3}`}</s>\n            </Badge>\n          </h3>\n          <h1 className=\"display-3\">\n            <Badge className=\"bg-danger\">\n              {slide.price.formatted_with_symbol}\n            </Badge>\n          </h1>\n        </div>\n      </Col>\n      <Col\n        md={4}\n        className=\"d-flex align-items-center justify-content-center justify-content-md-start position-relative\"\n      >\n        <Badge\n          className=\"bg-danger px-3 shadow position-absolute d-none d-md-block\"\n          style={{ top: \"15%\", right: \"20%\", transform: \"rotate(45deg)\" }}\n        >\n          SALE! <Tags className=\"ms-3\" size={20} />\n        </Badge>\n        <img\n          className=\"img-fluid img-thumbnail shadow-lg h-75\"\n          src={slide.media.source}\n          alt={slide.name}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Slide;\n","import React from \"react\";\nimport { Container, Carousel, Badge } from \"react-bootstrap\";\nimport { Tags } from \"react-bootstrap-icons\";\nimport Slide from \"./Slide/Slide\";\n\nconst Slider = ({ products }) => {\n  const slides = [products[0], products[3], products[9]];\n\n  return (\n    <>\n      <Container className=\"mt-5\">\n        <div className=\"d-flex justify-content-between\">\n          <h1 className=\"mx-auto mx-md-0\">\n            <Badge className=\"bg-danger px-5 py-3 shadow\">\n              SALE! <Tags className=\"ms-3\" size={40} />\n            </Badge>\n          </h1>\n          <div className=\"flex-column align-items-end d-none d-md-flex\">\n            <p className=\"text-muted h5 mb-0\">Check out</p>\n            <h1 className=\"display-5\">Our best products</h1>\n          </div>\n        </div>\n        <Carousel variant=\"dark\" className=\"w-100 py-3\">\n          <Carousel.Item interval={3000}>\n            <Slide slide={slides[0]} />\n          </Carousel.Item>\n          <Carousel.Item interval={3000}>\n            <Slide slide={slides[1]} />\n          </Carousel.Item>\n          <Carousel.Item interval={3000}>\n            <Slide slide={slides[2]} />\n          </Carousel.Item>\n        </Carousel>\n      </Container>\n    </>\n  );\n};\n\nexport default Slider;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { House } from \"react-bootstrap-icons\";\n\nconst Confirmation = ({ order }) => {\n  return (\n    <>\n      <Container fluid=\"md\">\n        <h1 className=\"display-5 mb-5\">{`Thank you for your purchase,\n         ${order.customer.firstname} ${order.customer.lastname}`}</h1>\n        <h3>{`Order ref: ${order.customer_reference}`}</h3>\n        <p className=\"lead\">{`A confirmation email has been sent to ${order.customer.email}`}</p>\n        <Link to=\"/\" className=\"text-danger\">\n          <House className=\"me-2\" size={25} /> Go back to home\n        </Link>\n      </Container>\n    </>\n  );\n};\n\nexport default Confirmation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Bug } from \"react-bootstrap-icons\";\n\nconst Error = ({ error }) => {\n  console.log(error);\n  return (\n    <>\n      <Container fluid=\"md\">\n        <Row>\n          <Col md={4}>\n            <Bug className=\"text-danger ms-5\" size={150} />\n          </Col>\n          <Col>\n            <h1 className=\"display-5\">Oops, something went wrong!</h1>\n            <p className=\"lead text-danger\">{`Error: ${error.data.error.message}`}</p>\n\n            <Link to=\"/\" className=\"text-danger\">\n              Try again later\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Error;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { commerce } from \"./lib/commerce\";\n//prettier-ignore\nimport {ProductsList, Loading, NavbarComponent, Cart, Checkout, Slider, Confirmation, Error} from './components/index';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [order, setOrder] = useState({\n    merchant: {},\n    products: [],\n    cart: {},\n    isCartVisible: false,\n    order: {},\n  });\n  const [error, setError] = useState(\"\");\n\n  const fetchProducts = async () => {\n    try {\n      const { data } = await commerce.products.list();\n      setProducts(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"Error occured while fetching products\", error);\n    }\n  };\n\n  const fetchCart = async () => {\n    try {\n      const data = await commerce.cart.retrieve();\n      setCart(data);\n      setTotalItems(data.total_items);\n    } catch (error) {\n      console.log(\"Error occured while fetching cart\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  const handleAddToCart = async (productId, quantity) => {\n    try {\n      const { cart } = await commerce.cart.add(productId, quantity);\n      setCart(cart);\n      setTotalItems(cart.total_items);\n    } catch (error) {\n      console.log(\"Error occured while adding to cart\", error);\n    }\n  };\n\n  const handleUpdateCartQty = async (productId, quantity) => {\n    const { cart } = await commerce.cart.update(productId, { quantity });\n    setCart(cart);\n    setTotalItems(cart.total_items);\n  };\n\n  const handleRemoveFromCart = async (productId) => {\n    const { cart } = await commerce.cart.remove(productId);\n    setCart(cart);\n    setTotalItems(cart.total_items);\n  };\n\n  const handleEmptyCart = async () => {\n    const { cart } = await commerce.cart.empty();\n    setCart(cart);\n    setTotalItems(cart.total_items);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const order = await commerce.checkout.capture(checkoutTokenId, newOrder);\n      setOrder(order);\n      refreshCart();\n      return true;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  };\n\n  const refreshCart = async () => {\n    try {\n      const newCart = await commerce.cart.refresh();\n      setCart(newCart);\n      setTotalItems(newCart.total_items);\n    } catch (error) {\n      console.log(\"Error occured while refreshing cart\", error);\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <NavbarComponent totalItems={totalItems} />\n        <div style={{ marginTop: \"130px\" }} />\n        <Switch>\n          <Route exact path=\"/\">\n            {loading ? <Loading /> : \"\"}\n            {products.length && <Slider products={products} />}\n          </Route>\n          <Route exact path=\"/shop\">\n            {loading ? <Loading /> : \"\"}\n            <ProductsList products={products} onAddToCart={handleAddToCart} />\n          </Route>\n          <Route exact path=\"/cart\">\n            {cart && (\n              <Cart\n                cart={cart}\n                onUpdateCartQty={handleUpdateCartQty}\n                onRemoveFromCart={handleRemoveFromCart}\n                onEmptyCart={handleEmptyCart}\n              />\n            )}\n          </Route>\n          <Route exact path=\"/checkout\">\n            {cart && (\n              <Checkout cart={cart} onCaptureCheckout={handleCaptureCheckout} />\n            )}\n          </Route>\n          <Route exact path=\"/confirmation\">\n            <Confirmation order={order} />\n          </Route>\n          <Route exact path=\"/error\">\n            <Error error={error} />\n          </Route>\n        </Switch>\n        <div style={{ height: \"100px\" }} />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}